{
  "root": true,
  "plugins": [
    "@typescript-eslint",
    "import"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module",
    "ecmaVersion": "latest",
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    }
  },
  "env": {
    "es6": true,
    "browser": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "rules": {
    "semi": [
      "error",
      "always"
    ],
    "@typescript-eslint/indent": [
      "error",
      2
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "arrow-parens": [
      "error",
      "always"
    ],
    "block-spacing": "error",
    "comma-dangle": "off",
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc"
        },
        "groups": [
          "builtin",
          "external",
          [
            "internal",
            "index",
            "sibling",
            "parent"
          ]
        ],
        "newlines-between": "always",
        "warnOnUnassignedImports": true
      }
    ],
    "import/newline-after-import": [
      "error"
    ],
    "@typescript-eslint/comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "enums": "always-multiline",
        "tuples": "always-multiline"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": [
          "variableLike",
          "parameterProperty",
          "accessor",
          "enumMember",
          "method"
        ],
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "property",
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow",
        "filter": {
          "regex": "^(Authorization|Accept-Language|client_id|response_type|redirect_uri|code_challenge_method|code_challenge|grant_type|code_verifier|access_token|token_type|expires_in|refresh_token)$",
          "match": false
        }
      },
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  }
}
